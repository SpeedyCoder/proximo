# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import proximo_pb2 as proximo__pb2


class MessageSourceStub(object):
  """Consumer types
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Consume = channel.stream_stream(
        '/proximo.MessageSource/Consume',
        request_serializer=proximo__pb2.ConsumerRequest.SerializeToString,
        response_deserializer=proximo__pb2.Message.FromString,
        )


class MessageSourceServicer(object):
  """Consumer types
  """

  def Consume(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MessageSourceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Consume': grpc.stream_stream_rpc_method_handler(
          servicer.Consume,
          request_deserializer=proximo__pb2.ConsumerRequest.FromString,
          response_serializer=proximo__pb2.Message.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'proximo.MessageSource', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class MessageSinkStub(object):
  """Producer types
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Publish = channel.stream_stream(
        '/proximo.MessageSink/Publish',
        request_serializer=proximo__pb2.PublisherRequest.SerializeToString,
        response_deserializer=proximo__pb2.Confirmation.FromString,
        )


class MessageSinkServicer(object):
  """Producer types
  """

  def Publish(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MessageSinkServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Publish': grpc.stream_stream_rpc_method_handler(
          servicer.Publish,
          request_deserializer=proximo__pb2.PublisherRequest.FromString,
          response_serializer=proximo__pb2.Confirmation.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'proximo.MessageSink', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
